{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Template for a Application stack ec2 instance ",
  "Parameters": {
    "NetworkStackName": {
      "Description": "Web-Application Network Stack Name",
      "Type": "String"
    },
    "amiId": {
      "Description": "Image-ID of created Centos",
      "Type": "String"
    },
    "CircleCIStackName": {
      "Description": "CircleCI Roles and Policies Stack Name",
      "Type": "String"
    },
    "domainName": {
      "Description": "domain Name for S3 Bucket Naming",
      "Type": "String",
      "AllowedValues": [
        "csye6225-su19-sebastianc.me",
        "csye6225-su19-gandhiman.me",
        "csye6225-su19-sharmashubh.me"
      ]
    }
  },
  "Resources": {
    "s3BucketId": {
      "Type" : "AWS::S3::Bucket",
      "DeletionPolicy" : "Delete",
      "Properties" : {
        "BucketName" : {"Fn::Sub" : "${domainName}.csye6225.com"},
        "PublicAccessBlockConfiguration" : {
          "BlockPublicAcls" : true,
          "BlockPublicPolicy" : true,
          "IgnorePublicAcls" : true,
          "RestrictPublicBuckets" : true
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : { "Fn::Sub": "${AWS::StackName}-S3-Bucket" }
        } ]
      }
    },
    "s3BucketCrudPolicyId": {
      "Type" : "AWS::IAM::ManagedPolicy",
      "DependsOn": "s3BucketId",
      "Properties" : {
        "ManagedPolicyName" : "EC2-S3-Access",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowGetPutDeleteActionsOnS3Bucket",
              "Effect": "Allow",
              "Action": ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"],
              "Resource": {
                "Fn::Sub": [
                  "${bucketArn}/*",
                  { "bucketArn": {"Fn::GetAtt" : [ "s3BucketId", "Arn" ]} }
                ]
              }
            }
          ]
        },
        "Roles": [{ "Fn::ImportValue": {"Fn::Sub": "${CircleCIStackName}-ec2ExecutionRoleId"} }]
      }
    },
    "WebappSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-WebappSecuritygroup",
        "GroupDescription": "Security Group for web server",
        "VpcId": {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-vpcId"}},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-DBSecurityGroup",
        "GroupDescription": "Enable TCP access via port 3306",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${NetworkStackName}-vpcId"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [ "WebappSecurityGroup", "GroupId" ]
            }
          }
        ]
      }
    },
    "dbSubnetGroupId": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Data Base Group Name to be assigned to ",
        "DBSubnetGroupName": "DBsubnetGroup",
        "SubnetIds": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet2Id"
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${NetworkStackName}-subnet3Id"
            }
          }
        ]
      }
    },
    "rdsInstanceId": {
      "Type": "AWS::RDS::DBInstance",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "20",
        "Engine": "mysql",
        "EngineVersion": "5.6.35",
        "DBInstanceClass": "db.t2.micro",
        "MultiAZ": false,
        "DBInstanceIdentifier": "csye6225-su19",
        "MasterUsername": "csye6225master",
        "MasterUserPassword": "csye6225password",
        "DBSubnetGroupName": {
          "Ref": "dbSubnetGroupId"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "DBSecurityGroup"
          }
        ],
        "PubliclyAccessible": true,
        "DBName": "csye6225",
        "Port": "3306"
      }
    },
    "ec2InstanceProfileId": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          { "Fn::ImportValue": {"Fn::Sub": "${CircleCIStackName}-ec2ExecutionRoleId"} }
        ],
        "InstanceProfileName": "ec2InstanceProfile"
      }
    },
    "ec2InstanceId": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": false,
        "ImageId": { "Ref": "amiId" },
        "InstanceType": "t2.micro",
        "KeyName": "csye6225",
        "IamInstanceProfile": {
          "Ref": "ec2InstanceProfileId"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "SubnetId": { "Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-subnet1Id"} },
            "DeviceIndex": "0",
            "GroupSet": [ {"Ref": "WebappSecurityGroup"} ]
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "DeleteOnTermination": true,
              "VolumeSize": "20"
            }
          }
        ],
        "UserData" : {

          "Fn::Base64" : {
            "Fn::Join" : [ "", [
              "#!/bin/bash\n",
              "sudo systemctl stop tomcat\n",
              "echo \"#!/bin/sh\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"\nJAVA_OPTS=\\$JAVA_OPTS\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"if [ -z \\\"\\$JAVA_OPTS\\\" ]\nthen\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"\tJAVA_OPTS=\\\"-DactivatedProperties=prod\\\"\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"else\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"\tJAVA_OPTS=\\\"\\${JAVA_OPTS} -DactivatedProperties=prod\\\"\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"fi\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Ddomain=",{"Fn::GetAtt": ["rdsInstanceId", "Endpoint.Address"]},
              " -Ddatabase=csye6225 -DsqlUsername=csye6225master -DsqlPassword=csye6225password",
              " -Dbucket=", { "Ref" : "s3BucketId" },
              "\"\\\" >> /opt/tomcat/bin/setenv.sh\n",
              "echo \"export JAVA_OPTS\" >> /opt/tomcat/bin/setenv.sh\n",
              "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/cloudwatch-config.json -s",
              "sudo chmod +x /opt/tomcat/bin/setenv.sh\n",
              "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/amazon-cloudwatch-agent.json\n",
              "sudo systemctl start tomcat"
            ] ]
          }
        },
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Sub": "${AWS::StackName}-WebServer" }
          },
          {
            "Key" : "Application Role",
            "Value" : "Web Server"
          }
        ]
      }
    },
    "dynamoDBId": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "csye6225",
        "AttributeDefinitions": [
          {
            "AttributeName": "emailId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "emailId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TimeToLiveSpecification": {
          "AttributeName" : "timeStamp",
          "Enabled" : true
        }        
      }
    }
  },
  "Outputs": {
    "dynamoDBTable": {
      "Description": "DynamoDB Table Name",
      "Value": {"Ref": "dynamoDBId"},
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-dynamoDBTable" }
      }
    },
    
    "dynamoDBArn": {
      "Description": "DynamoDB Table Arn",
      "Value": {"Fn::GetAtt": ["dynamoDBId", "Arn"]},
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-dynamoDBArn" }
      }
    }
  }
}
